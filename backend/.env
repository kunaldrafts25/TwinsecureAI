# .env - Environment variables for local development

# --- Application Settings ---
PROJECT_NAME="TwinSecure AI Backend"
API_V1_STR="/api/v1"
ENVIRONMENT="development" # development, staging, production
LOG_LEVEL="INFO" # DEBUG, INFO, WARNING, ERROR, CRITICAL

# --- Security ---
# Generate a strong secret key: openssl rand -hex 32
SECRET_KEY= 2eac339caec02b4fe4a2120068a43f85b316abdfdcb20a68405c080069c5ab87
ALGORITHM="HS256"
# Access token lifetime in minutes (e.g., 30 minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30
# Default admin user (created on first startup if needed)
FIRST_SUPERUSER=admin@finguard.com
FIRST_SUPERUSER_PASSWORD=123456789

# --- Database (PostgreSQL) ---
# For local Docker Compose setup:
# POSTGRES_SERVER=postgres # Docker service name
POSTGRES_PORT=5432
POSTGRES_USER="postgres"
POSTGRES_PASSWORD="kUNAL@#$12345"
POSTGRES_DB= "TwinSecure"
POSTGRES_HOST="localhost"
# For AWS RDS (replace with your RDS details in production/staging):
# POSTGRES_SERVER=your-rds-instance-endpoint.region.rds.amazonaws.com
# POSTGRES_PORT=5432
# POSTGRES_USER=your_rds_user
# POSTGRES_PASSWORD=your_rds_password # Consider AWS Secrets Manager
# POSTGRES_DB=your_rds_db_name
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}

# --- Alerting ---
# Slack
SLACK_WEBHOOK_URL="<YOUR_SLACK_WEBHOOK_URL_HERE>" # Optional
SLACK_CHANNEL="#sec-alerts"

# Email (SMTP)
SMTP_TLS=True
SMTP_PORT=587
SMTP_HOST="smtp.gmail.com" # e.g., smtp.gmail.com or AWS SES endpoint
SMTP_USER="dipu330285@gmail.com" # Your email address
SMTP_PASSWORD="kunalsingh12345" # Store securely!
EMAILS_FROM_EMAIL="noreply@finguard.com"
EMAILS_FROM_NAME="TwinSecure AI"
# List of emails for critical alerts/reports (comma-separated)
ALERT_RECIPIENTS="ciso@finguard.com,security.leads@finguard.com"

# Discord
DISCORD_WEBHOOK_URL="<YOUR_DISCORD_WEBHOOK_URL_HERE>" # Optional

# --- Enrichment Services ---
# AbuseIPDB
ABUSEIPDB_API_KEY="<YOUR_ABUSEIPDB_API_KEY_HERE>" # Optional
ABUSEIPDB_API_URL="https://api.abuseipdb.com/api/v2/check"

# GeoIP (e.g., MaxMind) - Provide path to the database file
MAXMIND_DB_PATH="/path/to/GeoLite2-City.mmdb" # Mount this into Docker if needed

# --- AWS (if using Secrets Manager, etc.) ---
AWS_REGION="ap-south-1" # Pune, India region
# AWS_SECRETS_MANAGER_SECRET_NAME="twinsecure/prod/secrets" # Example

# --- ML Module ---
ML_MODEL_PATH="/models/autoencoder.h5" # Path inside the container
ML_TRAINING_SCHEDULE="0 2 * * *" # Cron schedule for nightly training (e.g., 2 AM)

# --- Rate Limiting (Optional - using slowapi) ---
RATE_LIMIT_ENABLED=True
RATE_LIMIT_DEFAULT="100/minute"

# --- CORS ---
# Comma-separated list of allowed origins
# Use "*" for development only, be specific in production
BACKEND_CORS_ORIGINS="http://localhost:5173,http://localhost:3000,https://your-frontend-domain.com"

